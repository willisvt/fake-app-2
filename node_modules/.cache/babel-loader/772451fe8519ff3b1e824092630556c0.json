{"remainingRequest":"/Users/will/code/fake apps/app2/Admin/node_modules/babel-loader/lib/index.js!/Users/will/code/fake apps/app2/Admin/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/will/code/fake apps/app2/Admin/src/state/modules/auth.js","dependencies":[{"path":"/Users/will/code/fake apps/app2/Admin/src/state/modules/auth.js","mtime":1637619638000},{"path":"/Users/will/code/fake apps/app2/Admin/babel.config.js","mtime":1594907270000},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1618860734223},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/babel-loader/lib/index.js","mtime":1649340985036},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1618860734066}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGdldEZpcmViYXNlQmFja2VuZCB9IGZyb20gJy4uLy4uL2F1dGhVdGlscy5qcyc7CmV4cG9ydCB2YXIgc3RhdGUgPSB7CiAgY3VycmVudFVzZXI6IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2F1dGhVc2VyJykKfTsKZXhwb3J0IHZhciBtdXRhdGlvbnMgPSB7CiAgU0VUX0NVUlJFTlRfVVNFUjogZnVuY3Rpb24gU0VUX0NVUlJFTlRfVVNFUihzdGF0ZSwgbmV3VmFsdWUpIHsKICAgIHN0YXRlLmN1cnJlbnRVc2VyID0gbmV3VmFsdWU7CiAgICBzYXZlU3RhdGUoJ2F1dGguY3VycmVudFVzZXInLCBuZXdWYWx1ZSk7CiAgfQp9OwpleHBvcnQgdmFyIGdldHRlcnMgPSB7CiAgLy8gV2hldGhlciB0aGUgdXNlciBpcyBjdXJyZW50bHkgbG9nZ2VkIGluLgogIGxvZ2dlZEluOiBmdW5jdGlvbiBsb2dnZWRJbihzdGF0ZSkgewogICAgcmV0dXJuICEhc3RhdGUuY3VycmVudFVzZXI7CiAgfQp9OwpleHBvcnQgdmFyIGFjdGlvbnMgPSB7CiAgLy8gVGhpcyBpcyBhdXRvbWF0aWNhbGx5IHJ1biBpbiBgc3JjL3N0YXRlL3N0b3JlLmpzYCB3aGVuIHRoZSBhcHAKICAvLyBzdGFydHMsIGFsb25nIHdpdGggYW55IG90aGVyIGFjdGlvbnMgbmFtZWQgYGluaXRgIGluIG90aGVyIG1vZHVsZXMuCiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCiAgaW5pdDogZnVuY3Rpb24gaW5pdChfcmVmKSB7CiAgICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLAogICAgICAgIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgIGRpc3BhdGNoKCd2YWxpZGF0ZScpOwogIH0sCiAgLy8gTG9ncyBpbiB0aGUgY3VycmVudCB1c2VyLgogIGxvZ0luOiBmdW5jdGlvbiBsb2dJbihfcmVmMikgewogICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdCwKICAgICAgICBkaXNwYXRjaCA9IF9yZWYyLmRpc3BhdGNoLAogICAgICAgIGdldHRlcnMgPSBfcmVmMi5nZXR0ZXJzOwoKICAgIHZhciBfcmVmMyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge30sCiAgICAgICAgZW1haWwgPSBfcmVmMy5lbWFpbCwKICAgICAgICBwYXNzd29yZCA9IF9yZWYzLnBhc3N3b3JkOwoKICAgIGlmIChnZXR0ZXJzLmxvZ2dlZEluKSByZXR1cm4gZGlzcGF0Y2goJ3ZhbGlkYXRlJyk7CiAgICByZXR1cm4gZ2V0RmlyZWJhc2VCYWNrZW5kKCkubG9naW5Vc2VyKGVtYWlsLCBwYXNzd29yZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgdmFyIHVzZXIgPSByZXNwb25zZTsKICAgICAgY29tbWl0KCdTRVRfQ1VSUkVOVF9VU0VSJywgdXNlcik7CiAgICAgIHJldHVybiB1c2VyOwogICAgfSk7CiAgfSwKICAvLyBMb2dzIG91dCB0aGUgY3VycmVudCB1c2VyLgogIGxvZ091dDogZnVuY3Rpb24gbG9nT3V0KF9yZWY0KSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKICAgIGNvbW1pdCgnU0VUX0NVUlJFTlRfVVNFUicsIG51bGwpOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCiAgICAgIGdldEZpcmViYXNlQmFja2VuZCgpLmxvZ291dCgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmVzb2x2ZSh0cnVlKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmVqZWN0KF90aGlzLl9oYW5kbGVFcnJvcihlcnJvcikpOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgLy8gcmVnaXN0ZXIgdGhlIHVzZXIKICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoX3JlZjUpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNS5jb21taXQsCiAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNS5kaXNwYXRjaCwKICAgICAgICBnZXR0ZXJzID0gX3JlZjUuZ2V0dGVyczsKCiAgICB2YXIgX3JlZjYgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9LAogICAgICAgIHVzZXJuYW1lID0gX3JlZjYudXNlcm5hbWUsCiAgICAgICAgZW1haWwgPSBfcmVmNi5lbWFpbCwKICAgICAgICBwYXNzd29yZCA9IF9yZWY2LnBhc3N3b3JkOwoKICAgIGlmIChnZXR0ZXJzLmxvZ2dlZEluKSByZXR1cm4gZGlzcGF0Y2goJ3ZhbGlkYXRlJyk7CiAgICByZXR1cm4gZ2V0RmlyZWJhc2VCYWNrZW5kKCkucmVnaXN0ZXJVc2VyKHVzZXJuYW1lLCBlbWFpbCwgcGFzc3dvcmQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHZhciB1c2VyID0gcmVzcG9uc2U7CiAgICAgIGNvbW1pdCgnU0VUX0NVUlJFTlRfVVNFUicsIHVzZXIpOwogICAgICByZXR1cm4gdXNlcjsKICAgIH0pOwogIH0sCiAgLy8gcmVnaXN0ZXIgdGhlIHVzZXIKICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKICByZXNldFBhc3N3b3JkOiBmdW5jdGlvbiByZXNldFBhc3N3b3JkKF9yZWY3KSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjcuY29tbWl0LAogICAgICAgIGRpc3BhdGNoID0gX3JlZjcuZGlzcGF0Y2gsCiAgICAgICAgZ2V0dGVycyA9IF9yZWY3LmdldHRlcnM7CgogICAgdmFyIF9yZWY4ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fSwKICAgICAgICBlbWFpbCA9IF9yZWY4LmVtYWlsOwoKICAgIGlmIChnZXR0ZXJzLmxvZ2dlZEluKSByZXR1cm4gZGlzcGF0Y2goJ3ZhbGlkYXRlJyk7CiAgICByZXR1cm4gZ2V0RmlyZWJhc2VCYWNrZW5kKCkuZm9yZ2V0UGFzc3dvcmQoZW1haWwpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHZhciBtZXNzYWdlID0gcmVzcG9uc2UuZGF0YTsKICAgICAgcmV0dXJuIG1lc3NhZ2U7CiAgICB9KTsKICB9LAogIC8vIFZhbGlkYXRlcyB0aGUgY3VycmVudCB1c2VyJ3MgdG9rZW4gYW5kIHJlZnJlc2hlcyBpdAogIC8vIHdpdGggbmV3IGRhdGEgZnJvbSB0aGUgQVBJLgogIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycwogIHZhbGlkYXRlOiBmdW5jdGlvbiB2YWxpZGF0ZShfcmVmOSkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY5LmNvbW1pdCwKICAgICAgICBzdGF0ZSA9IF9yZWY5LnN0YXRlOwogICAgaWYgKCFzdGF0ZS5jdXJyZW50VXNlcikgcmV0dXJuIFByb21pc2UucmVzb2x2ZShudWxsKTsKICAgIHZhciB1c2VyID0gZ2V0RmlyZWJhc2VCYWNrZW5kKCkuZ2V0QXV0aGVudGljYXRlZFVzZXIoKTsKICAgIGNvbW1pdCgnU0VUX0NVUlJFTlRfVVNFUicsIHVzZXIpOwogICAgcmV0dXJuIHVzZXI7CiAgfQp9OyAvLyA9PT0KLy8gUHJpdmF0ZSBoZWxwZXJzCi8vID09PQoKZnVuY3Rpb24gc2F2ZVN0YXRlKGtleSwgc3RhdGUpIHsKICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KHN0YXRlKSk7Cn0="},{"version":3,"sources":["/Users/will/code/fake apps/app2/Admin/src/state/modules/auth.js"],"names":["getFirebaseBackend","state","currentUser","sessionStorage","getItem","mutations","SET_CURRENT_USER","newValue","saveState","getters","loggedIn","actions","init","dispatch","logIn","commit","email","password","loginUser","then","response","user","logOut","Promise","resolve","reject","logout","catch","error","_handleError","register","username","registerUser","resetPassword","forgetPassword","message","data","validate","getAuthenticatedUser","key","window","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import { getFirebaseBackend } from '../../authUtils.js'\r\n\r\nexport const state = {\r\n    currentUser: sessionStorage.getItem('authUser'),\r\n}\r\n\r\nexport const mutations = {\r\n    SET_CURRENT_USER(state, newValue) {\r\n        state.currentUser = newValue\r\n        saveState('auth.currentUser', newValue)\r\n    }\r\n}\r\n\r\nexport const getters = {\r\n    // Whether the user is currently logged in.\r\n    loggedIn(state) {\r\n        return !!state.currentUser\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    // This is automatically run in `src/state/store.js` when the app\r\n    // starts, along with any other actions named `init` in other modules.\r\n    // eslint-disable-next-line no-unused-vars\r\n    init({ state, dispatch }) {\r\n        dispatch('validate')\r\n    },\r\n\r\n    // Logs in the current user.\r\n    logIn({ commit, dispatch, getters }, { email, password } = {}) {\r\n        if (getters.loggedIn) return dispatch('validate')\r\n\r\n        return getFirebaseBackend().loginUser(email, password).then((response) => {\r\n            const user = response\r\n            commit('SET_CURRENT_USER', user)\r\n            return user\r\n        });\r\n    },\r\n\r\n    // Logs out the current user.\r\n    logOut({ commit }) {\r\n        // eslint-disable-next-line no-unused-vars\r\n        commit('SET_CURRENT_USER', null)\r\n        return new Promise((resolve, reject) => {\r\n            // eslint-disable-next-line no-unused-vars\r\n            getFirebaseBackend().logout().then((response) => {\r\n                resolve(true);\r\n            }).catch((error) => {\r\n                reject(this._handleError(error));\r\n            })\r\n        });\r\n    },\r\n\r\n    // register the user\r\n    register({ commit, dispatch, getters }, { username, email, password } = {}) {\r\n        if (getters.loggedIn) return dispatch('validate')\r\n\r\n        return getFirebaseBackend().registerUser(username, email, password).then((response) => {\r\n            const user = response\r\n            commit('SET_CURRENT_USER', user)\r\n            return user\r\n        });\r\n    },\r\n\r\n    // register the user\r\n    // eslint-disable-next-line no-unused-vars\r\n    resetPassword({ commit, dispatch, getters }, { email } = {}) {\r\n        if (getters.loggedIn) return dispatch('validate')\r\n\r\n        return getFirebaseBackend().forgetPassword(email).then((response) => {\r\n            const message = response.data\r\n            return message\r\n        });\r\n    },\r\n\r\n    // Validates the current user's token and refreshes it\r\n    // with new data from the API.\r\n    // eslint-disable-next-line no-unused-vars\r\n    validate({ commit, state }) {\r\n        if (!state.currentUser) return Promise.resolve(null)\r\n        const user = getFirebaseBackend().getAuthenticatedUser();\r\n        commit('SET_CURRENT_USER', user)\r\n        return user;\r\n    },\r\n}\r\n\r\n// ===\r\n// Private helpers\r\n// ===\r\n\r\nfunction saveState(key, state) {\r\n    window.sessionStorage.setItem(key, JSON.stringify(state))\r\n}\r\n"]}]}
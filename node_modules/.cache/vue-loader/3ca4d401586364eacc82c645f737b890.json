{"remainingRequest":"/Users/will/code/fake apps/app2/Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will/code/fake apps/app2/Admin/src/router/views/forms/elements.vue?vue&type=template&id=52947156&","dependencies":[{"path":"/Users/will/code/fake apps/app2/Admin/src/router/views/forms/elements.vue","mtime":1637768328000},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1618860734223},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1649340987520},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1618860734223},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/vue-loader/lib/index.js","mtime":1649340987520}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
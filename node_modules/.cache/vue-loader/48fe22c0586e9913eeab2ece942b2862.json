{"remainingRequest":"/Users/will/code/fake apps/app2/Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will/code/fake apps/app2/Admin/src/router/views/crypto/exchange/index.vue?vue&type=template&id=1a2dfe62&","dependencies":[{"path":"/Users/will/code/fake apps/app2/Admin/src/router/views/crypto/exchange/index.vue","mtime":1637765456000},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1618860734223},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1649340987520},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1618860734223},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/vue-loader/lib/index.js","mtime":1649340987520}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
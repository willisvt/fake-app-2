{"remainingRequest":"/Users/will/code/fake apps/app2/Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will/code/fake apps/app2/Admin/src/router/views/forms/validation.vue?vue&type=template&id=f747f752&","dependencies":[{"path":"/Users/will/code/fake apps/app2/Admin/src/router/views/forms/validation.vue","mtime":1611845780000},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1618860734223},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1649340987520},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1618860734223},{"path":"/Users/will/code/fake apps/app2/Admin/node_modules/vue-loader/lib/index.js","mtime":1649340987520}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxMYXlvdXQ+CiAgPFBhZ2VIZWFkZXIgOnRpdGxlPSJ0aXRsZSIgOml0ZW1zPSJpdGVtcyIgLz4KICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgPGRpdiBjbGFzcz0iY29sLWxnLTYiPgogICAgICA8ZGl2IGNsYXNzPSJjYXJkIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgPGg0IGNsYXNzPSJjYXJkLXRpdGxlIj5Cb290c3RyYXAgVmFsaWRhdGlvbiAtIE5vcm1hbDwvaDQ+CiAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10aXRsZS1kZXNjIj4KICAgICAgICAgICAgUHJvdmlkZSB2YWx1YWJsZSwgYWN0aW9uYWJsZSBmZWVkYmFjayB0byB5b3VyIHVzZXJzIHdpdGggSFRNTDUKICAgICAgICAgICAgZm9ybSB2YWxpZGF0aW9u4oCTYXZhaWxhYmxlIGluIGFsbCBvdXIgc3VwcG9ydGVkIGJyb3dzZXJzLgogICAgICAgICAgPC9wPgogICAgICAgICAgPGZvcm0gY2xhc3M9Im5lZWRzLXZhbGlkYXRpb24iIEBzdWJtaXQucHJldmVudD0iZm9ybVN1Ym1pdCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+CiAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InZhbGlkYXRpb25DdXN0b20wMSI+Rmlyc3QgbmFtZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgIGlkPSJ2YWxpZGF0aW9uQ3VzdG9tMDEiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybS5mbmFtZSIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkZpcnN0IG5hbWUiCiAgICAgICAgICAgICAgICAgICAgdmFsdWU9Ik1hcmsiCiAgICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAnaXMtaW52YWxpZCc6IHN1Ym1pdHRlZCAmJiAkdi5mb3JtLmZuYW1lLiRlcnJvciwKICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgdi1pZj0ic3VibWl0dGVkICYmICR2LmZvcm0uZm5hbWUuJGVycm9yIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbnZhbGlkLWZlZWRiYWNrIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LmZvcm0uZm5hbWUucmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBpcyByZXF1aXJlZC48L3NwYW4KICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+CiAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InZhbGlkYXRpb25DdXN0b20wMiI+TGFzdCBuYW1lPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25DdXN0b20wMiIKICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJmb3JtLmxuYW1lIgogICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIKICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iTGFzdCBuYW1lIgogICAgICAgICAgICAgICAgICAgIHZhbHVlPSJPdHRvIgogICAgICAgICAgICAgICAgICAgIDpjbGFzcz0iewogICAgICAgICAgICAgICAgICAgICAgJ2lzLWludmFsaWQnOiBzdWJtaXR0ZWQgJiYgJHYuZm9ybS5sbmFtZS4kZXJyb3IsCiAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgIHYtaWY9InN1Ym1pdHRlZCAmJiAkdi5mb3JtLmxuYW1lLiRlcnJvciIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi5mb3JtLmxuYW1lLnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuPC9zcGFuCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0idmFsaWRhdGlvbkN1c3RvbTAzIj5DaXR5PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25DdXN0b20wMyIKICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJmb3JtLmNpdHkiCiAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJDaXR5IgogICAgICAgICAgICAgICAgICAgIDpjbGFzcz0iewogICAgICAgICAgICAgICAgICAgICAgJ2lzLWludmFsaWQnOiBzdWJtaXR0ZWQgJiYgJHYuZm9ybS5jaXR5LiRlcnJvciwKICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgdi1pZj0ic3VibWl0dGVkICYmICR2LmZvcm0uY2l0eS4kZXJyb3IiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImludmFsaWQtZmVlZGJhY2siCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSIhJHYuZm9ybS5jaXR5LnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuPC9zcGFuCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTMiPgogICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ2YWxpZGF0aW9uQ3VzdG9tMDQiPlN0YXRlPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25DdXN0b20wNCIKICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJmb3JtLnN0YXRlIgogICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIKICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iU3RhdGUiCiAgICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAnaXMtaW52YWxpZCc6IHN1Ym1pdHRlZCAmJiAkdi5mb3JtLnN0YXRlLiRlcnJvciwKICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgdi1pZj0ic3VibWl0dGVkICYmICR2LmZvcm0uc3RhdGUuJGVycm9yIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbnZhbGlkLWZlZWRiYWNrIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LmZvcm0uc3RhdGUucmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBpcyByZXF1aXJlZC48L3NwYW4KICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+CiAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InZhbGlkYXRpb25DdXN0b20wNSI+WmlwPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25DdXN0b20wNSIKICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJmb3JtLnppcGNvZGUiCiAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJaaXAiCiAgICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAnaXMtaW52YWxpZCc6IHN1Ym1pdHRlZCAmJiAkdi5mb3JtLnppcGNvZGUuJGVycm9yLAogICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICB2LWlmPSJzdWJtaXR0ZWQgJiYgJHYuZm9ybS56aXBjb2RlLiRlcnJvciIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi5mb3JtLnppcGNvZGUucmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBpcyByZXF1aXJlZC48L3NwYW4KICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWNoZWNrIG1iLTMiPgogICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY2hlY2staW5wdXQiCiAgICAgICAgICAgICAgICB0eXBlPSJjaGVja2JveCIKICAgICAgICAgICAgICAgIHZhbHVlPSIiCiAgICAgICAgICAgICAgICBpZD0iaW52YWxpZENoZWNrIgogICAgICAgICAgICAgICAgcmVxdWlyZWQ9IiIKICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1jaGVjay1sYWJlbCIgZm9yPSJpbnZhbGlkQ2hlY2siPgogICAgICAgICAgICAgICAgQWdyZWUgdG8gdGVybXMgYW5kIGNvbmRpdGlvbnMKICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImludmFsaWQtZmVlZGJhY2siPgogICAgICAgICAgICAgICAgWW91IG11c3QgYWdyZWUgYmVmb3JlIHN1Ym1pdHRpbmcuCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIHR5cGU9InN1Ym1pdCI+U3VibWl0IGZvcm08L2J1dHRvbj4KICAgICAgICAgIDwvZm9ybT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDwhLS0gZW5kIGNhcmQgLS0+CiAgICA8L2Rpdj4KICAgIDwhLS0gZW5kIGNvbCAtLT4KICAgIDxkaXYgY2xhc3M9ImNvbC1sZy02Ij4KICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5Ij4KICAgICAgICAgIDxoNCBjbGFzcz0iY2FyZC10aXRsZSI+Qm9vdHN0cmFwIFZhbGlkYXRpb24gKFRvb2x0aXBzKTwvaDQ+CiAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10aXRsZS1kZXNjIj4KICAgICAgICAgICAgSWYgeW91ciBmb3JtIGxheW91dCBhbGxvd3MgaXQsIHlvdSBjYW4gc3dhcCB0aGUKICAgICAgICAgICAgPGNvZGU+Lnt2YWxpZHxpbnZhbGlkfS1mZWVkYmFjazwvY29kZT4gY2xhc3NlcyBmb3IKICAgICAgICAgICAgPGNvZGU+Lnt2YWxpZHxpbnZhbGlkfS10b29sdGlwPC9jb2RlPiBjbGFzc2VzIHRvIGRpc3BsYXkKICAgICAgICAgICAgdmFsaWRhdGlvbiBmZWVkYmFjayBpbiBhIHN0eWxlZCB0b29sdGlwLgogICAgICAgICAgPC9wPgogICAgICAgICAgPGZvcm0gY2xhc3M9Im5lZWRzLXZhbGlkYXRpb24iIEBzdWJtaXQucHJldmVudD0idG9vbHRpcEZvcm0iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTMgcG9zaXRpb24tcmVsYXRpdmUiPgogICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ2YWxpZGF0aW9uVG9vbHRpcDAxIj5GaXJzdCBuYW1lPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25Ub29sdGlwMDEiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0idG9vbHRpcGZvcm0uZm5hbWUiCiAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJGaXJzdCBuYW1lIgogICAgICAgICAgICAgICAgICAgIHZhbHVlPSJNYXJrIgogICAgICAgICAgICAgICAgICAgIDpjbGFzcz0iewogICAgICAgICAgICAgICAgICAgICAgJ2lzLWludmFsaWQnOiBzdWJtaXRmb3JtICYmICR2LnRvb2x0aXBmb3JtLmZuYW1lLiRlcnJvciwKICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgdi1pZj0ic3VibWl0Zm9ybSAmJiAkdi50b29sdGlwZm9ybS5mbmFtZS4kZXJyb3IiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImludmFsaWQtdG9vbHRpcCIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi50b29sdGlwZm9ybS5mbmFtZS5yZXF1aXJlZCIKICAgICAgICAgICAgICAgICAgICAgID5QbGVhc2UgcHJvdmlkZSB2YWxpZCBGaXJzdCBuYW1lLjwvc3BhbgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIHBvc2l0aW9uLXJlbGF0aXZlIj4KICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0idmFsaWRhdGlvblRvb2x0aXAwMiI+TGFzdCBuYW1lPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25Ub29sdGlwMDIiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0idG9vbHRpcGZvcm0ubG5hbWUiCiAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJMYXN0IG5hbWUiCiAgICAgICAgICAgICAgICAgICAgdmFsdWU9Ik90dG8iCiAgICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAnaXMtaW52YWxpZCc6IHN1Ym1pdGZvcm0gJiYgJHYudG9vbHRpcGZvcm0ubG5hbWUuJGVycm9yLAogICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICB2LWlmPSJzdWJtaXRmb3JtICYmICR2LnRvb2x0aXBmb3JtLmxuYW1lLiRlcnJvciIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW52YWxpZC10b29sdGlwIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnRvb2x0aXBmb3JtLmxuYW1lLnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgICAgPlBsZWFzZSBwcm92aWRlIHZhbGlkIExhc3QgbmFtZS48L3NwYW4KICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyBwb3NpdGlvbi1yZWxhdGl2ZSI+CiAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InZhbGlkYXRpb25Ub29sdGlwVXNlcm5hbWUiPlVzZXJuYW1lPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwLXByZXBlbmQiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25Ub29sdGlwVXNlcm5hbWVQcmVwZW5kIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW5wdXQtZ3JvdXAtdGV4dCIKICAgICAgICAgICAgICAgICAgICAgICAgPkA8L3NwYW4KICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgICAgIGlkPSJ2YWxpZGF0aW9uVG9vbHRpcFVzZXJuYW1lIgogICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0idG9vbHRpcGZvcm0udXNlcm5hbWUiCiAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIKICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJVc2VybmFtZSIKICAgICAgICAgICAgICAgICAgICAgIGFyaWEtZGVzY3JpYmVkYnk9InZhbGlkYXRpb25Ub29sdGlwVXNlcm5hbWVQcmVwZW5kIgogICAgICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICdpcy1pbnZhbGlkJzoKICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJtaXRmb3JtICYmICR2LnRvb2x0aXBmb3JtLnVzZXJuYW1lLiRlcnJvciwKICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgICB2LWlmPSJzdWJtaXRmb3JtICYmICR2LnRvb2x0aXBmb3JtLnVzZXJuYW1lLiRlcnJvciIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbnZhbGlkLXRvb2x0aXAiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnRvb2x0aXBmb3JtLnVzZXJuYW1lLnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgICAgICA+UGxlYXNlIGNob29zZSBhIHVuaXF1ZSBhbmQgdmFsaWQgdXNlcm5hbWUuPC9zcGFuCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTMgcG9zaXRpb24tcmVsYXRpdmUiPgogICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ2YWxpZGF0aW9uVG9vbHRpcDAzIj5DaXR5PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25Ub29sdGlwMDMiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0idG9vbHRpcGZvcm0uY2l0eSIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkNpdHkiCiAgICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAnaXMtaW52YWxpZCc6IHN1Ym1pdGZvcm0gJiYgJHYudG9vbHRpcGZvcm0uY2l0eS4kZXJyb3IsCiAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgIHYtaWY9InN1Ym1pdGZvcm0gJiYgJHYudG9vbHRpcGZvcm0uY2l0eS4kZXJyb3IiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImludmFsaWQtdG9vbHRpcCIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi50b29sdGlwZm9ybS5jaXR5LnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgICAgPlBsZWFzZSBwcm92aWRlIGEgdmFsaWQgY2l0eS48L3NwYW4KICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyBwb3NpdGlvbi1yZWxhdGl2ZSI+CiAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InZhbGlkYXRpb25Ub29sdGlwMDQiPlN0YXRlPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25Ub29sdGlwMDQiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0idG9vbHRpcGZvcm0uc3RhdGUiCiAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJTdGF0ZSIKICAgICAgICAgICAgICAgICAgICA6Y2xhc3M9InsKICAgICAgICAgICAgICAgICAgICAgICdpcy1pbnZhbGlkJzogc3VibWl0Zm9ybSAmJiAkdi50b29sdGlwZm9ybS5zdGF0ZS4kZXJyb3IsCiAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgIHYtaWY9InN1Ym1pdGZvcm0gJiYgJHYudG9vbHRpcGZvcm0uc3RhdGUuJGVycm9yIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbnZhbGlkLXRvb2x0aXAiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSIhJHYudG9vbHRpcGZvcm0uc3RhdGUucmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgICA+UGxlYXNlIHByb3ZpZGUgYSB2YWxpZCBzdGF0ZS48L3NwYW4KICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIHR5cGU9InN1Ym1pdCI+U3VibWl0IGZvcm08L2J1dHRvbj4KICAgICAgICAgIDwvZm9ybT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDwhLS0gZW5kIGNhcmQgLS0+CiAgICA8L2Rpdj4KICAgIDwhLS0gZW5kIGNvbCAtLT4KICA8L2Rpdj4KICA8IS0tIGVuZCByb3cgLS0+CiAgPGRpdiBjbGFzcz0icm93Ij4KICAgIDxkaXYgY2xhc3M9ImNvbC1sZy02Ij4KICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5Ij4KICAgICAgICAgIDxoNCBjbGFzcz0iY2FyZC10aXRsZSI+VmFsaWRhdGlvbiB0eXBlPC9oND4KICAgICAgICAgIDxwIGNsYXNzPSJjYXJkLXRpdGxlLWRlc2MiPgogICAgICAgICAgICBQYXJzbGV5IGlzIGEgamF2YXNjcmlwdCBmb3JtIHZhbGlkYXRpb24gbGlicmFyeS4gSXQgaGVscHMgeW91CiAgICAgICAgICAgIHByb3ZpZGUgeW91ciB1c2VycyB3aXRoIGZlZWRiYWNrIG9uIHRoZWlyIGZvcm0gc3VibWlzc2lvbiBiZWZvcmUKICAgICAgICAgICAgc2VuZGluZyBpdCB0byB5b3VyIHNlcnZlci4KICAgICAgICAgIDwvcD4KCiAgICAgICAgICA8Zm9ybSBhY3Rpb249IiMiIEBzdWJtaXQucHJldmVudD0idHlwZUZvcm0iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICA8bGFiZWw+UmVxdWlyZWQ8L2xhYmVsPgogICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgdi1tb2RlbD0idHlwZWZvcm0ubmFtZSIKICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlR5cGUgc29tZXRoaW5nIgogICAgICAgICAgICAgICAgbmFtZT0ibmFtZSIKICAgICAgICAgICAgICAgIDpjbGFzcz0iewogICAgICAgICAgICAgICAgICAnaXMtaW52YWxpZCc6IHR5cGVzdWJtaXQgJiYgJHYudHlwZWZvcm0ubmFtZS4kZXJyb3IsCiAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgdi1pZj0idHlwZXN1Ym1pdCAmJiAkdi50eXBlZm9ybS5uYW1lLiRlcnJvciIKICAgICAgICAgICAgICAgIGNsYXNzPSJpbnZhbGlkLWZlZWRiYWNrIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi50eXBlZm9ybS5uYW1lLnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBpcyByZXF1aXJlZC48L3NwYW4KICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICA8bGFiZWw+RXF1YWwgVG88L2xhYmVsPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0idHlwZWZvcm0ucGFzc3dvcmQiCiAgICAgICAgICAgICAgICAgIHR5cGU9InBhc3N3b3JkIgogICAgICAgICAgICAgICAgICBuYW1lPSJwYXNzd29yZCIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIKICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7CiAgICAgICAgICAgICAgICAgICAgJ2lzLWludmFsaWQnOiB0eXBlc3VibWl0ICYmICR2LnR5cGVmb3JtLnBhc3N3b3JkLiRlcnJvciwKICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlBhc3N3b3JkIgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgdi1pZj0idHlwZXN1Ym1pdCAmJiAkdi50eXBlZm9ybS5wYXNzd29yZC4kZXJyb3IiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbnZhbGlkLWZlZWRiYWNrIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSIhJHYudHlwZWZvcm0ucGFzc3dvcmQucmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnR5cGVmb3JtLnBhc3N3b3JkLm1pbkxlbmd0aCIKICAgICAgICAgICAgICAgICAgICA+UGFzc3dvcmQgbXVzdCBiZSBhdCBsZWFzdCA2IGNoYXJhY3RlcnMuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im10LTIiPgogICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InR5cGVmb3JtLmNvbmZpcm1QYXNzd29yZCIKICAgICAgICAgICAgICAgICAgdHlwZT0icGFzc3dvcmQiCiAgICAgICAgICAgICAgICAgIG5hbWU9ImNvbmZpcm1QYXNzd29yZCIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIKICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7CiAgICAgICAgICAgICAgICAgICAgJ2lzLWludmFsaWQnOgogICAgICAgICAgICAgICAgICAgICAgdHlwZXN1Ym1pdCAmJiAkdi50eXBlZm9ybS5jb25maXJtUGFzc3dvcmQuJGVycm9yLAogICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iUmUtVHlwZSBQYXNzd29yZCIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIHYtaWY9InR5cGVzdWJtaXQgJiYgJHYudHlwZWZvcm0uY29uZmlybVBhc3N3b3JkLiRlcnJvciIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImludmFsaWQtZmVlZGJhY2siCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi50eXBlZm9ybS5jb25maXJtUGFzc3dvcmQucmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICB2LWVsc2UtaWY9IiEkdi50eXBlZm9ybS5jb25maXJtUGFzc3dvcmQuc2FtZUFzUGFzc3dvcmQiCiAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgc2hvdWxkIGJlIHRoZSBzYW1lLjwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICA8bGFiZWw+RS1NYWlsPC9sYWJlbD4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InR5cGVmb3JtLmVtYWlsIgogICAgICAgICAgICAgICAgICB0eXBlPSJlbWFpbCIKICAgICAgICAgICAgICAgICAgbmFtZT0iZW1haWwiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICAgIDpjbGFzcz0iewogICAgICAgICAgICAgICAgICAgICdpcy1pbnZhbGlkJzogdHlwZXN1Ym1pdCAmJiAkdi50eXBlZm9ybS5lbWFpbC4kZXJyb3IsCiAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbnRlciBhIHZhbGlkIGUtbWFpbCIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIHYtaWY9InR5cGVzdWJtaXQgJiYgJHYudHlwZWZvcm0uZW1haWwuJGVycm9yIgogICAgICAgICAgICAgICAgICBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnR5cGVmb3JtLmVtYWlsLnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID5UaGlzIHZhbHVlIGlzIHJlcXVpcmVkLjwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi50eXBlZm9ybS5lbWFpbC5lbWFpbCIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBzaG91bGQgYmUgYSB2YWxpZCBlbWFpbC48L3NwYW4KICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICA8bGFiZWw+VVJMPC9sYWJlbD4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InR5cGVmb3JtLnVybCIKICAgICAgICAgICAgICAgICAgdHlwZT0idXJsIgogICAgICAgICAgICAgICAgICBuYW1lPSJ1cmwiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJVUkwiCiAgICAgICAgICAgICAgICAgIDpjbGFzcz0iewogICAgICAgICAgICAgICAgICAgICdpcy1pbnZhbGlkJzogdHlwZXN1Ym1pdCAmJiAkdi50eXBlZm9ybS51cmwuJGVycm9yLAogICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgdi1pZj0idHlwZXN1Ym1pdCAmJiAkdi50eXBlZm9ybS51cmwuJGVycm9yIgogICAgICAgICAgICAgICAgICBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnR5cGVmb3JtLnVybC5yZXF1aXJlZCIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBpcyByZXF1aXJlZC48L3NwYW4KICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSIhJHYudHlwZWZvcm0udXJsLnVybCIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBzaG91bGQgYmUgYSB2YWxpZCB1cmwuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+CiAgICAgICAgICAgICAgPGxhYmVsPkRpZ2l0czwvbGFiZWw+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJ0eXBlZm9ybS5kaWdpdCIKICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgbmFtZT0iZGlnaXQiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICAgIDpjbGFzcz0iewogICAgICAgICAgICAgICAgICAgICdpcy1pbnZhbGlkJzogdHlwZXN1Ym1pdCAmJiAkdi50eXBlZm9ybS5kaWdpdC4kZXJyb3IsCiAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbnRlciBvbmx5IGRpZ2l0cyIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIHYtaWY9InR5cGVzdWJtaXQgJiYgJHYudHlwZWZvcm0uZGlnaXQuJGVycm9yIgogICAgICAgICAgICAgICAgICBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnR5cGVmb3JtLmRpZ2l0LnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID5UaGlzIHZhbHVlIGlzIHJlcXVpcmVkLjwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi50eXBlZm9ybS5kaWdpdC5udW1lcmljIgogICAgICAgICAgICAgICAgICAgID5UaGlzIHZhbHVlIHNob3VsZCBiZSBkaWdpdHMuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+CiAgICAgICAgICAgICAgPGxhYmVsPk51bWJlcjwvbGFiZWw+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJ0eXBlZm9ybS5udW1iZXIiCiAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgIG5hbWU9Im51bWJlciIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIKICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7CiAgICAgICAgICAgICAgICAgICAgJ2lzLWludmFsaWQnOiB0eXBlc3VibWl0ICYmICR2LnR5cGVmb3JtLm51bWJlci4kZXJyb3IsCiAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbnRlciBvbmx5IG51bWJlcnMiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICB2LWlmPSJ0eXBlc3VibWl0ICYmICR2LnR5cGVmb3JtLm51bWJlci4kZXJyb3IiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbnZhbGlkLWZlZWRiYWNrIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSIhJHYudHlwZWZvcm0ubnVtYmVyLnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID5UaGlzIHZhbHVlIGlzIHJlcXVpcmVkLjwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi50eXBlZm9ybS5udW1iZXIubnVtZXJpYyIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBzaG91bGQgYmUgYSB2YWxpZCBudW1iZXIuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+CiAgICAgICAgICAgICAgPGxhYmVsPkFscGhhbnVtZXJpYzwvbGFiZWw+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJ0eXBlZm9ybS5hbHBoYW51bSIKICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgbmFtZT0iYWxwaGFudW0iCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICAgIDpjbGFzcz0iewogICAgICAgICAgICAgICAgICAgICdpcy1pbnZhbGlkJzogdHlwZXN1Ym1pdCAmJiAkdi50eXBlZm9ybS5hbHBoYW51bS4kZXJyb3IsCiAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbnRlciBhbHBoYW51bWVyaWMgdmFsdWUiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICB2LWlmPSJ0eXBlc3VibWl0ICYmICR2LnR5cGVmb3JtLmFscGhhbnVtLiRlcnJvciIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImludmFsaWQtZmVlZGJhY2siCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi50eXBlZm9ybS5hbHBoYW51bS5yZXF1aXJlZCIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBpcyByZXF1aXJlZC48L3NwYW4KICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSIhJHYudHlwZWZvcm0uYWxwaGFudW0uYWxwaGFOdW0iCiAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgc2hvdWxkIGJlIGFscGhhbnVtZXJpYy48L3NwYW4KICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICA8bGFiZWw+VGV4dGFyZWE8L2xhYmVsPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8dGV4dGFyZWEKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0idHlwZWZvcm0udGV4dGFyZWEiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICAgIG5hbWU9InRleHRhcmVhIgogICAgICAgICAgICAgICAgICA6Y2xhc3M9InsKICAgICAgICAgICAgICAgICAgICAnaXMtaW52YWxpZCc6IHR5cGVzdWJtaXQgJiYgJHYudHlwZWZvcm0udGV4dGFyZWEuJGVycm9yLAogICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICByb3dzPSI1IgogICAgICAgICAgICAgICAgPjwvdGV4dGFyZWE+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIHYtaWY9InR5cGVzdWJtaXQgJiYgJHYudHlwZWZvcm0udGV4dGFyZWEuJGVycm9yIgogICAgICAgICAgICAgICAgICBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnR5cGVmb3JtLnRleHRhcmVhLnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID5UaGlzIHZhbHVlIGlzIHJlcXVpcmVkLjwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTMgbWItMCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5Ij5TdWJtaXQ8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0icmVzZXQiIGNsYXNzPSJidG4gYnRuLXNlY29uZGFyeSBtcy0xIj4KICAgICAgICAgICAgICAgICAgQ2FuY2VsCiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8IS0tIGVuZCBjYXJkIC0tPgogICAgPC9kaXY+CiAgICA8IS0tIGVuZCBjb2wtLT4KCiAgICA8ZGl2IGNsYXNzPSJjb2wtbGctNiI+CiAgICAgIDxkaXYgY2xhc3M9ImNhcmQiPgogICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICA8aDQgY2xhc3M9ImNhcmQtdGl0bGUiPlJhbmdlIHZhbGlkYXRpb248L2g0PgogICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGl0bGUtZGVzYyI+CiAgICAgICAgICAgIFBhcnNsZXkgaXMgYSBqYXZhc2NyaXB0IGZvcm0gdmFsaWRhdGlvbiBsaWJyYXJ5LiBJdCBoZWxwcyB5b3UKICAgICAgICAgICAgcHJvdmlkZSB5b3VyIHVzZXJzIHdpdGggZmVlZGJhY2sgb24gdGhlaXIgZm9ybSBzdWJtaXNzaW9uIGJlZm9yZQogICAgICAgICAgICBzZW5kaW5nIGl0IHRvIHlvdXIgc2VydmVyLgogICAgICAgICAgPC9wPgoKICAgICAgICAgIDxmb3JtIGFjdGlvbj0iIyIgQHN1Ym1pdC5wcmV2ZW50PSJyYW5nZWZvcm0iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICA8bGFiZWw+TWluIExlbmd0aDwvbGFiZWw+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJyYW5nZS5taW5sZW4iCiAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgIG5hbWU9Im1pbmxlbiIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIKICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7ICdpcy1pbnZhbGlkJzogc3VibWl0ICYmICR2LnJhbmdlLm1pbmxlbi4kZXJyb3IgfSIKICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9Ik1pbiA2IGNoYXJzLiIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIHYtaWY9InN1Ym1pdCAmJiAkdi5yYW5nZS5taW5sZW4uJGVycm9yIgogICAgICAgICAgICAgICAgICBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnJhbmdlLm1pbmxlbi5yZXF1aXJlZCIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBpcyByZXF1aXJlZC48L3NwYW4KICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSIhJHYucmFuZ2UubWlubGVuLm1pbkxlbmd0aCIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBpcyB0b28gc2hvcnQuIEl0IHNob3VsZCBoYXZlIDYgY2hhcmFjdGVycyBvcgogICAgICAgICAgICAgICAgICAgIG1vcmUuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+CiAgICAgICAgICAgICAgPGxhYmVsPk1heCBMZW5ndGg8L2xhYmVsPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icmFuZ2UubWF4bGVuZ3RoIgogICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgICAgICBuYW1lPSJtYXhsZW5ndGgiCiAgICAgICAgICAgICAgICAgIDpjbGFzcz0iewogICAgICAgICAgICAgICAgICAgICdpcy1pbnZhbGlkJzogc3VibWl0ICYmICR2LnJhbmdlLm1heGxlbmd0aC4kZXJyb3IsCiAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJNYXggNiBjaGFycy4iCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICB2LWlmPSJzdWJtaXQgJiYgJHYucmFuZ2UubWF4bGVuZ3RoLiRlcnJvciIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImludmFsaWQtZmVlZGJhY2siCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi5yYW5nZS5tYXhsZW5ndGgucmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnJhbmdlLm1heGxlbmd0aC5tYXhMZW5ndGgiCiAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgaXMgdG9vIGxvbmcuIEl0IHNob3VsZCBoYXZlIDYgY2hhcmFjdGVycyBvcgogICAgICAgICAgICAgICAgICAgIGZld2VyLjwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTMiPgogICAgICAgICAgICAgIDxsYWJlbD5SYW5nZSBMZW5ndGg8L2xhYmVsPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icmFuZ2UuYmV0d2VlbiIKICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIKICAgICAgICAgICAgICAgICAgbmFtZT0iYmV0d2VlbiIKICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7ICdpcy1pbnZhbGlkJzogc3VibWl0ICYmICR2LnJhbmdlLmJldHdlZW4uJGVycm9yIH0iCiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJUZXh0IGJldHdlZW4gNSAtIDEwIGNoYXJzIGxlbmd0aCIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIHYtaWY9InN1Ym1pdCAmJiAkdi5yYW5nZS5iZXR3ZWVuLiRlcnJvciIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImludmFsaWQtZmVlZGJhY2siCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi5yYW5nZS5iZXR3ZWVuLnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID5UaGlzIHZhbHVlIGlzIHJlcXVpcmVkLjwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi5yYW5nZS5iZXR3ZWVuLm1heExlbmd0aCIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBsZW5ndGggaXMgaW52YWxpZC4gSXQgc2hvdWxkIGJlIGJldHdlZW4gNSBhbmQKICAgICAgICAgICAgICAgICAgICAxMCBjaGFyYWN0ZXJzIGxvbmcuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnJhbmdlLmJldHdlZW4ubWluTGVuZ3RoIgogICAgICAgICAgICAgICAgICAgID5UaGlzIHZhbHVlIGxlbmd0aCBpcyBpbnZhbGlkLiBJdCBzaG91bGQgYmUgYmV0d2VlbiA1IGFuZAogICAgICAgICAgICAgICAgICAgIDEwIGNoYXJhY3RlcnMgbG9uZy48L3NwYW4KICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICA8bGFiZWw+TWluIFZhbHVlPC9sYWJlbD4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InJhbmdlLm1pbnZhbCIKICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgbmFtZT0ibWludmFsIgogICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgICAgICA6Y2xhc3M9InsgJ2lzLWludmFsaWQnOiBzdWJtaXQgJiYgJHYucmFuZ2UubWludmFsLiRlcnJvciB9IgogICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iTWluIHZhbHVlIGlzIDYiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICB2LWlmPSJzdWJtaXQgJiYgJHYucmFuZ2UubWludmFsLiRlcnJvciIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImludmFsaWQtZmVlZGJhY2siCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi5yYW5nZS5taW52YWwucmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgaXMgcmVxdWlyZWQuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iISR2LnJhbmdlLm1pbnZhbC5taW5WYWx1ZSIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBzaG91bGQgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDYuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+CiAgICAgICAgICAgICAgPGxhYmVsPk1heCBWYWx1ZTwvbGFiZWw+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJyYW5nZS5tYXh2YWwiCiAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICAgIG5hbWU9Im1heHZhbCIKICAgICAgICAgICAgICAgICAgOmNsYXNzPSJ7ICdpcy1pbnZhbGlkJzogc3VibWl0ICYmICR2LnJhbmdlLm1heHZhbC4kZXJyb3IgfSIKICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9Ik1heCB2YWx1ZSBpcyA2IgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgdi1pZj0ic3VibWl0ICYmICR2LnJhbmdlLm1heHZhbC4kZXJyb3IiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbnZhbGlkLWZlZWRiYWNrIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSIhJHYucmFuZ2UubWF4dmFsLnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID5UaGlzIHZhbHVlIGlzIHJlcXVpcmVkLjwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi5yYW5nZS5tYXh2YWwubWF4VmFsdWUiCiAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgc2hvdWxkIGJlIGxvd2VyIHRoYW4gb3IgZXF1YWwgdG8gNi48L3NwYW4KICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICA8bGFiZWw+UmFuZ2UgVmFsdWU8L2xhYmVsPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icmFuZ2UucmFuZ2V2YWwiCiAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICAgIG5hbWU9InJhbmdldmFsIgogICAgICAgICAgICAgICAgICA6Y2xhc3M9InsKICAgICAgICAgICAgICAgICAgICAnaXMtaW52YWxpZCc6IHN1Ym1pdCAmJiAkdi5yYW5nZS5yYW5nZXZhbC4kZXJyb3IsCiAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJOdW1iZXIgYmV0d2VlbiA2IC0gMTAwIgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgdi1pZj0ic3VibWl0ICYmICR2LnJhbmdlLnJhbmdldmFsLiRlcnJvciIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImludmFsaWQtZmVlZGJhY2siCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi5yYW5nZS5yYW5nZXZhbC5yZXF1aXJlZCIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBpcyByZXF1aXJlZC48L3NwYW4KICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSIhJHYucmFuZ2UucmFuZ2V2YWwubWluVmFsdWUiCiAgICAgICAgICAgICAgICAgICAgPlRoaXMgdmFsdWUgc2hvdWxkIGJlIGJldHdlZW4gNiBhbmQgMTAwLjwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi5yYW5nZS5yYW5nZXZhbC5tYXhWYWx1ZSIKICAgICAgICAgICAgICAgICAgICA+VGhpcyB2YWx1ZSBzaG91bGQgYmUgYmV0d2VlbiA2IGFuZCAxMDAuPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyI+CiAgICAgICAgICAgICAgPGxhYmVsPlJlZ3VsYXIgRXhwPC9sYWJlbD4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InJhbmdlLmV4cHIiCiAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICAgIG5hbWU9ImV4cHIiCiAgICAgICAgICAgICAgICAgIDpjbGFzcz0ieyAnaXMtaW52YWxpZCc6IHN1Ym1pdCAmJiAkdi5yYW5nZS5leHByLiRlcnJvciB9IgogICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iSGV4LiBDb2xvciIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIHYtaWY9InN1Ym1pdCAmJiAkdi5yYW5nZS5leHByLiRlcnJvciIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImludmFsaWQtZmVlZGJhY2siCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IiEkdi5yYW5nZS5leHByLnJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID5UaGlzIHZhbHVlIGlzIHJlcXVpcmVkLjwvc3BhbgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIG1iLTAiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSI+U3VibWl0PC9idXR0b24+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InJlc2V0IiBjbGFzcz0iYnRuIGJ0bi1zZWNvbmRhcnkgbXMtMSI+CiAgICAgICAgICAgICAgICAgIENhbmNlbAogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9mb3JtPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPCEtLSBlbmQgY2FyZCAtLT4KICAgIDwvZGl2PgogICAgPCEtLSBlbmQgY29sIC0tPgogIDwvZGl2PgogIDwhLS0gZW5kIHJvdyAtLT4KPC9MYXlvdXQ+Cg=="},null]}